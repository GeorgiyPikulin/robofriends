{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","username","email","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,GAAGC,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,SAASC,EAAW,EAAXA,MAC/B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BN,EAA1B,cACrB,qCACC,6BAAKC,IACL,4BAAIC,IACJ,4BAAIC,WCcOI,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,mCAEEA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OACC,cAAC,EAAD,CAECX,GAAIQ,EAAOG,GAAGX,GACdC,KAAMO,EAAOG,GAAGV,KAChBC,SAAUM,EAAOG,GAAGT,SACpBC,MAAOK,EAAOG,GAAGR,OAJZQ,SCKGC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKT,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCCI,EARA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAASC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,KCuCWK,G,wDArCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXtB,OAAQ,GACRmB,YAAa,IAJF,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKT,SAAS,CAAClB,OAAQ2B,S,oBAOzC,WACC,MAAgCC,KAAKN,MAA7BtB,EAAR,EAAQA,OAAQmB,EAAhB,EAAgBA,YACVU,EAAiB7B,EAAO8B,QAAO,SAAAC,GACpC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAASd,EAAYa,kBAEtD,OAAQhC,EAAOkC,OAGd,sBAAKtC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUhB,OAAQ6B,SANrB,8C,GAzBgBM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ece69a6e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({id,name,username,email}) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\t\n\t\t\t<>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{username}</p>\n\t\t\t\t<p>{email}</p>\n\t\t\t</>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({robots}) => {\n\treturn(\n\t\t<>\n\t\t\t{\n\t\t\t\trobots.map((user,i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\tusername={robots[i].username} \n\t\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots' \n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = ({children}) => {\n\treturn(\n\t\t<div style={{ overflowY: 'scroll',border: '2px solid black', height: '800px' }}>\n\t\t\t{children}\n\t\t</div>\n\t) \n};\n\nexport default Scroll;","import React, { Component } from 'react';\nimport Cardlist from '../components/Cardlist';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\t\trobots: [],\n\t\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => {this.setState({robots: users})});\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst { robots, searchfield } = this.state;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\n\t\t})\n\t\treturn !robots.length? \n\t\t<h1>LoAading</h1> :\n\t\t(\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'>Robofriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<Cardlist robots={filteredRobots} />\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}